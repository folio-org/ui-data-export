{
  "globals": {
    "process": true
  },
  "extends": "@folio/eslint-config-stripes",
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaFeatures": {
      "legacyDecorators": true
    }
  },
  "plugins": ["babel"],
  "root": true,
  "rules": {
    "key-spacing": [
      "error",
      {
        "beforeColon": false
      }
    ],
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let"
        ],
        "next": [
          "const",
          "let"
        ]
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "return"
        ]
      }
    ],
    "semi": "off",
    "babel/semi": "error",
    "object-curly-newline": [
      "error",
      {
        "multiline": true,
        "minProperties": 2
      }
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": false
      }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 0,
        "maxBOF": 0
      }
    ],
    "no-void": "off",
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "arrow-parens": [
      "error",
      "as-needed"
    ],
    "quote-props": [
      "error",
      "as-needed"
    ],
    "no-use-before-define": "off",
    "prefer-template": "error",
    "no-else-return": "error",
    "newline-per-chained-call": "error",
    "linebreak-style": [
      "error",
      "unix"
    ],
    "prefer-object-spread": "off",
    "no-console": [
      "error",
      {
        "allow": ["warn", "error"]
      }
    ],
    "react/prop-types": [
      "error",
      {
        "skipUndeclared": true
      }
    ],
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-wrap-multilines": [
      "error"
    ],
    "react/jsx-max-props-per-line": [
      "error",
      {
        "maximum": 1,
        "when": "always"
      }
    ],
    "react/jsx-sort-props": [
      1,
      {
        "noSortAlphabetically": true,
        "ignoreCase": true,
        "callbacksLast": true,
        "shorthandLast": false,
        "reservedFirst": false
      }
    ],
    "react/jsx-no-useless-fragment": "error"
  }
}
